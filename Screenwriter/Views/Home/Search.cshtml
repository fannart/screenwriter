@model Screenwriter.ViewModels.SearchViewModel

@{
ViewBag.Title = "Search";
}

<!--  Search Form-->
@using (Html.BeginForm("Search", "Home", FormMethod.Post, htmlAttributes: new { role = "form", @class="search"}))
{
<div class="row text-center">
	<div class="form-group">
		<label class="sr-only" for="Title">Search</label>
		<input type="text" class="form-control" id="Title" placeholder="Search" name="titleSearch">
	</div>
	<div id="advancedSearch" class="form-horizontal">
		<div class="form-group">
				
			<label class="sr-only" for="Year">Year of Publish</label>
			<input type="number" class="form-inline" id="Year" placeholder="Year of publish" name="YearPublished">

			<label class="sr-only" for="Genre">Media Genre</label>
			<input type="text" class="form-inline" id="Genre" placeholder="MediaGenre" name="mediaGenre">
					
			<select multiple="multiple" name="subtitleLanguage" class="multiselect" id="subtitleLanguages" title="Subtitle Languages">
				@{ foreach (var i in Model.SearchForm.Languages)
					{
					<option value=@i.Value>@i.Text</option>
					}
				}
			</select>
			<select multiple="multiple" name="mediaLanguage" class="multiselect"  id="mediaLanguages" title="Media Languages">
				@{ foreach (var i in Model.SearchForm.Languages)
					{
					<option value=@i.Value>@i.Text</option>
					}
				}
			</select>
		</div>
		<div class="form-group">
			<select name="mediaType" class="btn btn-default" >
					<option value="0">Media Type</option>
				@{ foreach (var i in Model.SearchForm.MediaTypes)
					{
					<option value=@i.Value>@i.Text</option>
					}
				}
			</select>
			<label class="sr-only" for="Season">Season</label>
			<input type="number" class="form-inline" id="Season" placeholder="Show Season" name="Season">
			<label class="sr-only" for="Episode">Episode</label>
			<input type="number" class="form-inline" id="Episode" placeholder="Show Episode" name="Episode">
		</div>
		<div class="form-group">
			<label class="sr-only" for="School">School</label>
			<input type="text" class="form-inline" id="School" placeholder="School" name="School">
			<label class="sr-only" for="Course">Course</label>
			<input type="text" class="form-inline" id="Course" placeholder="Course" name="Course">
			<label class="sr-only" for="Lecturer">Lecturer</label>
			<input type="text" class="form-inline" id="Lecturer" placeholder="Lecturer" name="Lecturer">
		</div>
	</div>
	<button type="button" class="btn btn-default" id="advSearchButton">
		<span class="glyphicon glyphicon-zoom-in"></span>
	</button>

	<button type="submit" class="btn btn-default">
		<span class="glyphicon glyphicon-search"></span>
	</button>
</div>
}

@if (Model.Results != null)
{
if(Model.Results.Any())
{
<div>
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4>Search Results</h4>
		</div>
		<table class="table">
			@foreach (var item in Model.Results)
			{
			<tr>
				<td>
					@Html.ActionLink(@item.Title, "Media",
						new { id = item.MediaID },
						new { title="See more about \"" + item.Title + "\"" })
				</td>
				<td><span title="Spoken language"><img src="#" class="flag flag-@item.MediaLanguage.ShortName" alt="@item.MediaLanguage.Name" /> @item.MediaLanguage.Name</span></td>
				<td><span title="Media type">@item.MediaTypeString</span></td>
				@{
					if (item.MediaType == 1)
					{
						<td>Season: @item.Season - Episode: @item.Episode</td>
					}
					if (item.MediaType == 2)
					{
						<td>@item.Course</td>
					}
					else
					{
						<td></td>
					}
				 }
			</tr>
			}
		</table>
	</div>
</div>
}
}
@if (Model.RequestResults != null)
{
<table class="table">
	<tr>
		<th>Title</th>
	</tr>
	@foreach(var item in Model.RequestResults)
	{
	<tr>
		<td>
			@item.Title
		</td>
	</tr>
	}
</table>
}
<div class="panel text-center">
	<button type="button" class="btn btn-primary btn-lg" onclick="window.location = 'CreateMedia/';">Request a subtitle for a non-existing media</button>
</div>
<div class="col-md-4 col-sm-6">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4>Most Downloaded</h4>
		</div>
		<table class="table">
			@foreach (var item in Model.MostDownloaded)
			{
			<tr>
				<td>
					@Html.ActionLink(@item.Media.Title, "Media",
						new { id = item.Media.ID },
						new { title = "See more about \"" + item.Media.Title + "\"" })
				</td>
				<td>
					<img src="#" alt="@item.Language.Name" title="@item.Language.Name" class="flag flag-@item.Language.ShortName" />
				</td>
				<td>
					<span title="Download count">@item.Subtitle.DownloadCount</span>
				</td>
				<td>
					<a href="@Url.Action("Download", new { id = item.Subtitle.ID })" title="Download">
						<span class="glyphicon glyphicon-download"></span>
					</a>
				</td>
			</tr>
			}
		</table>
	</div>
</div>
<div class="col-md-4 hidden-sm">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4>Latest Subtitles</h4>
		</div>
		<table class="table">
			@foreach (var item in Model.NewestSubtitles)
			{
			<tr>
				<td>
					@Html.ActionLink(@item.Media.Title, "Media",
						new { id = item.Media.ID },
						new { title = "See more about \"" + item.Media.Title + "\"" })
				</td>
				<td>
					<img src="#" alt="@item.Language.Name" title="@item.Language.Name" class="flag flag-@item.Language.ShortName" />
				</td>
				<td>
					<a href="@Url.Action("Download", new { id = item.Subtitle.ID })" title="Download">
						<span class="glyphicon glyphicon-download"></span>
					</a>
				</td>
			</tr>
			}
		</table>
	</div>
</div>
<div class="col-md-4 col-sm-6">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4>Most Requested</h4>
		</div>
		<table class="table">
			@foreach (var item in Model.MostRequested)
			{
			<tr>
				<td>
					@Html.ActionLink(@item.Media.Title, "Media", 
						new { id = item.Media.ID }, 
						new { title="See more about \"" + item.Media.Title + "\"" })
				</td>
				<td>
					<img src="#" alt="@item.Language.Name" title="@item.Language.Name" class="flag flag-@item.Language.ShortName" />
				</td>
				<td>
					<span title="Request count">@item.Subtitle.Requests.Count</span>
				</td>
				<td>
					<a href="@Url.Action("UpvoteSubtitleRequest", new { id = item.Subtitle.ID })" class="requestSubtitle" title="Add request" data-id="@item.Subtitle.ID">
						<span class="glyphicon glyphicon-plus-sign"></span>
					</a>
				</td>
				@if(User.Identity.IsAuthenticated)
				{
				<td>
					<a href="@Url.Action("Subtitle", "Editor", new { id = item.Subtitle.ID })" title="Edit subtitle">
						<span class="glyphicon glyphicon-pencil"></span>
					</a>
				</td>
				}
			</tr>
			}
		</table>
	</div>
</div>
<div class="clearfix"></div>


@{
	// TODO: Make pop up Error Window partial and use for other errors.
}
<div class="modal fade" id="registerToRequestError" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title" id="registerToRequestErrorLabel">
					Request Error - User not logged in
				</h4>
			</div>
			<div class="modal-body">
				You have to log in to be able to request subtitles.
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
				@Html.ActionLink("Login", "Login", "Account", routeValues: null, htmlAttributes: new { @class = "btn btn-primary" })
			</div>
		</div>
	</div>
</div>